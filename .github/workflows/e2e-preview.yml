name: 🧪 E2E Preview Test

# 基于 Vercel 部署状态事件触发
on:
  deployment_status:
    types: [success]
  # 手动触发
  workflow_dispatch:
    inputs:
      preview_url:
        description: 'Preview URL to test'
        required: true
        type: string

env:
  NODE_VERSION: '22'

jobs:
  # 简单的连接性测试
  e2e-connectivity-test:
    name: 🧪 Preview Connectivity Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # 只处理 Vercel Preview 部署成功事件
    if: |
      (github.event_name == 'deployment_status' &&
       github.event.deployment.environment == 'Preview' &&
       github.event.deployment_status.state == 'success') ||
      github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      statuses: write
      checks: write

    steps:
      - name: 🎯 Get Preview URL
        id: get-url
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PREVIEW_URL="${{ github.event.inputs.preview_url }}"
          else
            PREVIEW_URL="${{ github.event.deployment_status.target_url }}"
          fi
          echo "🎯 Testing Preview URL: $PREVIEW_URL"
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: 🧪 Test Preview Connection
        id: test-connection
        env:
          PREVIEW_URL: ${{ steps.get-url.outputs.preview_url }}
        run: |
          echo "🔗 Testing connectivity to: $PREVIEW_URL"

          # 测试连接性（允许 200, 401, 403）
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$PREVIEW_URL" || echo "000")
          echo "📊 HTTP Status: $HTTP_STATUS"

          # 检查是否是有效响应
          if [[ "$HTTP_STATUS" =~ ^(200|401|403)$ ]]; then
            echo "✅ Preview URL is accessible (HTTP $HTTP_STATUS)"
            echo "test_result=success" >> $GITHUB_OUTPUT

            # 简单的内容检查
            RESPONSE_SIZE=$(curl -s "$PREVIEW_URL" | wc -c)
            echo "📏 Response size: $RESPONSE_SIZE bytes"

            if [ "$RESPONSE_SIZE" -gt 100 ]; then
              echo "✅ Response content looks valid"
            else
              echo "⚠️ Response seems too small, but connection successful"
            fi
          else
            echo "❌ Preview URL not accessible (HTTP $HTTP_STATUS)"
            echo "test_result=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: 📊 Create Check Status
        if: github.event_name == 'deployment_status'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEST_RESULT: ${{ steps.test-connection.outputs.test_result }}
          PREVIEW_URL: ${{ steps.get-url.outputs.preview_url }}
        run: |
          if [ "$TEST_RESULT" = "success" ]; then
            STATE="success"
            DESCRIPTION="Preview deployment is accessible and ready for testing"
          else
            STATE="failure"
            DESCRIPTION="Preview deployment connectivity test failed"
          fi

          # 创建检查状态（用于 branch protection）
          gh api "/repos/${{ github.repository }}/statuses/${{ github.event.deployment.sha }}" \
            --field state="$STATE" \
            --field target_url="$PREVIEW_URL" \
            --field description="$DESCRIPTION" \
            --field context="e2e/preview-connectivity"

          echo "📝 Status created: $STATE - $DESCRIPTION"
