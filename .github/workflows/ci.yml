name: 🔄 CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '22'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # 共享依赖安装
  setup:
    name: 📦 Setup Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔑 Generate cache key
        id: cache-key
        run: echo "key=npm-${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT
        
      - name: 💾 Restore dependencies cache
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: npm-
          
      - name: 📦 Setup Node.js
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci --frozen-lockfile --prefer-offline
        env:
          NPM_CONFIG_AUDIT: false

  # 代码质量检查
  quality-gate:
    name: 🔍 Quality Gate
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 8
    permissions:
      contents: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 🧹 Run ESLint
        run: npm run lint
        continue-on-error: false
        
      - name: 📝 TypeScript check
        run: npx tsc --noEmit
        continue-on-error: false
        
      - name: 🔒 Security audit
        run: |
          set -e
          npm audit --audit-level=high || {
            echo "⚠️ Security vulnerabilities found, but continuing..."
            npm audit --audit-level=critical
          }
        
      - name: 📊 Dependency check
        run: npm outdated --depth=0 || true
        continue-on-error: true

  # 构建验证
  build-test:
    name: 🏗️ Build Verification
    runs-on: ubuntu-latest
    needs: [setup, quality-gate]
    timeout-minutes: 10
    permissions:
      contents: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 🔗 Link Vercel Project
        run: npx vercel@47.0.5 link --token=${{ secrets.VERCEL_TOKEN }} --yes --project=v0-gap-drill-error-notebook
        
      - name: 🔧 Pull Vercel Environment Variables
        run: npx vercel@47.0.5 env pull .env.ci --token=${{ secrets.VERCEL_TOKEN }} --yes
        
      - name: 🏗️ Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1
        timeout-minutes: 8
          
      - name: 📈 Bundle size check
        run: |
          echo "Build size analysis:"
          if [ -d ".next" ]; then
            du -sh .next/
            find .next -name "*.js" -type f -exec du -h {} + | sort -hr | head -10
          else
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi
          
      - name: 💾 Cache build artifacts
        uses: actions/cache@v4
        with:
          path: .next
          key: build-${{ github.sha }}
          restore-keys: |
            build-${{ github.ref_name }}-
            build-

  # 安全扫描
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: [setup, quality-gate]
    if: github.event_name == 'pull_request'
    timeout-minutes: 12
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: 🔗 Link Vercel Project for CodeQL
        run: npx vercel@47.0.5 link --token=${{ secrets.VERCEL_TOKEN }} --yes --project=v0-gap-drill-error-notebook
        
      - name: 🔧 Pull Vercel Environment Variables for CodeQL
        run: npx vercel@47.0.5 env pull .env.ci --token=${{ secrets.VERCEL_TOKEN }} --yes
          
      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3
          
      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3