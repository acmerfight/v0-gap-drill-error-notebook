name: 🚀 PR Quality Gate

# 环境一致性 CI/CD 流程设计:
# 1. PR 阶段: GitHub Actions 完整验证 (镜像 Vercel 环境)
# 2. 分支保护: 强制基于最新代码 + 通过验证后允许合并
# 3. 合并后: Vercel 自动部署 (使用相同环境配置重新验证)
# 优势: 避免重复执行，确保环境100%一致

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '22'
  NEXT_TELEMETRY_DISABLED: 1
  VERCEL_PROJECT: 'v0-gap-drill-error-notebook'
  VERCEL_VERSION: '47.0.5'

jobs:
  # 共享环境和依赖设置 (镜像 Vercel 配置)
  shared-setup:
    name: 🔧 Environment Setup (Vercel Mirror)
    runs-on: ubuntu-latest
    timeout-minutes: 4
    permissions:
      contents: read
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      vercel-key: ${{ steps.cache-key.outputs.vercel-key }}
      vercel-env-cache: ${{ steps.vercel-cache.outputs.cache-hit }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔑 Generate cache keys
        id: cache-key
        run: |
          echo "key=npm-${{ hashFiles('package-lock.json') }}" >> $GITHUB_OUTPUT
          echo "vercel-key=vercel-env-${{ env.VERCEL_PROJECT }}-${{ github.sha }}" >> $GITHUB_OUTPUT
        
      - name: 💾 Restore dependencies cache
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: npm-
          
      - name: 📦 Setup Node.js (conditional)
        if: steps.deps-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔧 Install dependencies (镜像 Vercel)
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: npm ci --frozen-lockfile --prefer-offline
        env:
          NPM_CONFIG_AUDIT: false
          
      - name: 💾 Check Vercel env cache
        uses: actions/cache@v4
        id: vercel-cache
        with:
          path: .env.production
          key: ${{ steps.cache-key.outputs.vercel-key }}
          
      - name: 🔗 Setup Vercel environment (conditional)
        if: steps.vercel-cache.outputs.cache-hit != 'true'
        run: |
          npx vercel@${{ env.VERCEL_VERSION }} link --token=${{ secrets.VERCEL_TOKEN }} --yes --project=${{ env.VERCEL_PROJECT }}
          npx vercel@${{ env.VERCEL_VERSION }} env pull .env.production --environment=production --token=${{ secrets.VERCEL_TOKEN }} --yes

  # PR 质量检查 (镜像 Vercel 验证)
  quality-gate:
    name: 🔍 Code Quality Validation
    runs-on: ubuntu-latest
    needs: shared-setup
    timeout-minutes: 6
    permissions:
      contents: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.shared-setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 🧹 Run ESLint
        run: npm run lint
        continue-on-error: false
        
      - name: 📝 TypeScript check
        run: npx tsc --noEmit
        continue-on-error: false
        
      - name: 🔒 Security audit
        run: |
          set -e
          npm audit --audit-level=high || {
            echo "⚠️ Security vulnerabilities found, but continuing..."
            npm audit --audit-level=critical
          }
        
      - name: 📊 Dependency check
        run: npm outdated --depth=0 || true
        continue-on-error: true

  # 构建验证 (镜像 Vercel 环境)
  build-test:
    name: 🏗️ Build Verification (Vercel Mirror)
    runs-on: ubuntu-latest
    needs: shared-setup
    timeout-minutes: 8
    permissions:
      contents: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.shared-setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 💾 Restore Vercel environment
        uses: actions/cache@v4
        with:
          path: .env.production
          key: ${{ needs.shared-setup.outputs.vercel-key }}
          fail-on-cache-miss: true
        
      - name: 🏗️ Build application (镜像 Vercel)
        run: npm run ci:production
        env:
          NEXT_TELEMETRY_DISABLED: 1
          NODE_ENV: production
        timeout-minutes: 6
          
      - name: 📈 Bundle size check
        run: |
          echo "Build size analysis:"
          if [ -d ".next" ]; then
            du -sh .next/
            find .next -name "*.js" -type f -exec du -h {} + | sort -hr | head -10
          else
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi
          
      - name: 💾 Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .next
            .next/cache
            node_modules/.cache
          key: build-${{ runner.os }}-${{ hashFiles('package-lock.json', 'next.config.*') }}-${{ github.sha }}
          restore-keys: |
            build-${{ runner.os }}-${{ hashFiles('package-lock.json', 'next.config.*') }}-
            build-${{ runner.os }}-

  # 安全扫描
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: shared-setup
    timeout-minutes: 8
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 💾 Restore dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ needs.shared-setup.outputs.cache-key }}
          fail-on-cache-miss: true
        
      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          
      - name: 💾 Restore Vercel environment for CodeQL
        uses: actions/cache@v4
        with:
          path: .env.production
          key: ${{ needs.shared-setup.outputs.vercel-key }}
          fail-on-cache-miss: true
          
      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3
        env:
          NODE_ENV: production
          
      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3